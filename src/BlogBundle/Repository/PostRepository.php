<?php

namespace BlogBundle\Repository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAuthorPosts($id)
    {
        return $this->createQueryBuilder('p')
            ->leftJoin("p.category", "c")
            ->addSelect("c")
            ->where('p.user = :id')
            ->setParameter('id', $id)
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery()
            ->getResult()
            ;
    }

    public function getCategoryPosts($id)
    {
        return $this->createQueryBuilder('p')
            ->leftJoin("p.user", "u")
            ->addSelect("u")
            ->where('p.category = :id')
            ->setParameter('id', $id)
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery()
            ->getResult()
            ;
    }

    public function getPostWithCategoryAndUserQuery()
    {
        return $this->createQueryBuilder('p')
            ->leftJoin("p.category", "c")
            ->addSelect("c")
            ->leftJoin("p.user", "u")
            ->addSelect("u")
            ->orderBy('p.createdAt', 'DESC')
            ;
    }

    public function getPostWithCategoryAndUser()
    {
        return $this->createQueryBuilder('p')
            ->leftJoin("p.category", "c")
            ->addSelect("c")
            ->leftJoin("p.user", "u")
            ->addSelect("u")
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery()
            ->getResult()
            ;
    }

    public function getOnePostWithCategoryAndUserAndComment($id)
    {
        return $this->createQueryBuilder('p')
            ->leftJoin("p.category", "c")
            ->addSelect("c")
            ->leftJoin("p.user", "u")
            ->addSelect("u")
            ->leftJoin("p.comments", "cm")
            ->addSelect("cm")
            ->where('p.id = :id')
            ->setParameter('id', $id)
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery()
            ->getSingleResult()
            ;
    }

    public function getAllPosts()
    {
        return $this->createQueryBuilder('p')
            ->orderBy('p.episode', 'DESC')
            ->getQuery()
            ->getResult()
            ;
    }

    public function getPosts()
    {
        return $this->createQueryBuilder('p')
            ->orderBy('p.episode', 'DESC')
            ;
    }
}
